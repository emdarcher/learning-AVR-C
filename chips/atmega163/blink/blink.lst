
blink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000084  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a2c  00000000  00000000  000000d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007f0  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 24 00 	jmp	0x48	; 0x48 <__ctors_end>
   4:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
   8:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
   c:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  10:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  14:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  18:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  1c:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  20:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  24:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  28:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  2c:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  30:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  34:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  38:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  3c:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  40:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>
  44:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__bad_interrupt>

00000048 <__ctors_end>:
  48:	11 24       	eor	r1, r1
  4a:	1f be       	out	0x3f, r1	; 63
  4c:	cf e5       	ldi	r28, 0x5F	; 95
  4e:	d4 e0       	ldi	r29, 0x04	; 4
  50:	de bf       	out	0x3e, r29	; 62
  52:	cd bf       	out	0x3d, r28	; 61
  54:	0e 94 30 00 	call	0x60	; 0x60 <main>
  58:	0c 94 40 00 	jmp	0x80	; 0x80 <_exit>

0000005c <__bad_interrupt>:
  5c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000060 <main>:

int main ( void )
{
	unsigned char counter;
	/* set PORTB for output */
	DDRB = (1<<0);
  60:	81 e0       	ldi	r24, 0x01	; 1
  62:	87 bb       	out	0x17, r24	; 23
		//	_delay_loop_2(300000);
		//	counter++;
		//}

		/* set PORTB.0 low */
		PORTB ^= (1<<0);
  64:	91 e0       	ldi	r25, 0x01	; 1
  66:	88 b3       	in	r24, 0x18	; 24
  68:	89 27       	eor	r24, r25
  6a:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  6c:	2f e3       	ldi	r18, 0x3F	; 63
  6e:	3d e0       	ldi	r19, 0x0D	; 13
  70:	43 e0       	ldi	r20, 0x03	; 3
  72:	21 50       	subi	r18, 0x01	; 1
  74:	30 40       	sbci	r19, 0x00	; 0
  76:	40 40       	sbci	r20, 0x00	; 0
  78:	e1 f7       	brne	.-8      	; 0x72 <main+0x12>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <main+0x1c>
  7c:	00 00       	nop
  7e:	f3 cf       	rjmp	.-26     	; 0x66 <main+0x6>

00000080 <_exit>:
  80:	f8 94       	cli

00000082 <__stop_program>:
  82:	ff cf       	rjmp	.-2      	; 0x82 <__stop_program>
