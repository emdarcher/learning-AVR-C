
blink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000004c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a68  00000000  00000000  000000a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007fd  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0b c0       	rjmp	.+22     	; 0x18 <__ctors_end>
   2:	10 c0       	rjmp	.+32     	; 0x24 <__bad_interrupt>
   4:	0f c0       	rjmp	.+30     	; 0x24 <__bad_interrupt>
   6:	0e c0       	rjmp	.+28     	; 0x24 <__bad_interrupt>
   8:	0d c0       	rjmp	.+26     	; 0x24 <__bad_interrupt>
   a:	0c c0       	rjmp	.+24     	; 0x24 <__bad_interrupt>
   c:	0b c0       	rjmp	.+22     	; 0x24 <__bad_interrupt>
   e:	0a c0       	rjmp	.+20     	; 0x24 <__bad_interrupt>
  10:	09 c0       	rjmp	.+18     	; 0x24 <__bad_interrupt>
  12:	08 c0       	rjmp	.+16     	; 0x24 <__bad_interrupt>
  14:	07 c0       	rjmp	.+14     	; 0x24 <__bad_interrupt>
  16:	06 c0       	rjmp	.+12     	; 0x24 <__bad_interrupt>

00000018 <__ctors_end>:
  18:	11 24       	eor	r1, r1
  1a:	1f be       	out	0x3f, r1	; 63
  1c:	cf ed       	ldi	r28, 0xDF	; 223
  1e:	cd bf       	out	0x3d, r28	; 61
  20:	04 d0       	rcall	.+8      	; 0x2a <main>
  22:	12 c0       	rjmp	.+36     	; 0x48 <_exit>

00000024 <__bad_interrupt>:
  24:	ed cf       	rjmp	.-38     	; 0x0 <__vectors>

00000026 <setup>:
#include <util/delay.h>

#define F_CPU 1000000UL

void setup(){
DDRB |= (1 << PB4);
  26:	bc 9a       	sbi	0x17, 4	; 23
}
  28:	08 95       	ret

0000002a <main>:
#include <util/delay.h>

#define F_CPU 1000000UL

void setup(){
DDRB |= (1 << PB4);
  2a:	bc 9a       	sbi	0x17, 4	; 23
int main(){
setup();

while (1)
{
	PORTB ^= (1 << PB4);
  2c:	90 e1       	ldi	r25, 0x10	; 16
  2e:	88 b3       	in	r24, 0x18	; 24
  30:	89 27       	eor	r24, r25
  32:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  34:	2f e9       	ldi	r18, 0x9F	; 159
  36:	36 e8       	ldi	r19, 0x86	; 134
  38:	41 e0       	ldi	r20, 0x01	; 1
  3a:	21 50       	subi	r18, 0x01	; 1
  3c:	30 40       	sbci	r19, 0x00	; 0
  3e:	40 40       	sbci	r20, 0x00	; 0
  40:	e1 f7       	brne	.-8      	; 0x3a <__CCP__+0x6>
  42:	00 c0       	rjmp	.+0      	; 0x44 <__SREG__+0x5>
  44:	00 00       	nop
  46:	f3 cf       	rjmp	.-26     	; 0x2e <main+0x4>

00000048 <_exit>:
  48:	f8 94       	cli

0000004a <__stop_program>:
  4a:	ff cf       	rjmp	.-2      	; 0x4a <__stop_program>
